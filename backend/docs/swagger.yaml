basePath: /api/v1
definitions:
  main.AssignTask:
    properties:
      taskId:
        type: string
      userId:
        type: string
    type: object
  main.Board:
    properties:
      _id:
        type: string
      name:
        type: string
      owned_by:
        type: string
    type: object
  main.CreateBoard:
    properties:
      name:
        type: string
    type: object
  main.CreateTask:
    properties:
      board:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  main.CreateUser:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  main.EditTask:
    properties:
      board:
        type: string
      completed_at:
        type: integer
      deadline:
        type: integer
      description:
        type: string
      name:
        type: string
    type: object
  main.LoginUser:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  main.Task:
    properties:
      _id:
        type: string
      assigned_to:
        type: string
      board:
        type: string
      created_at:
        type: integer
      created_by:
        type: string
      deadline:
        type: integer
      description:
        type: string
      name:
        type: string
    type: object
  main.TokenSwagger:
    properties:
      token:
        type: string
    type: object
  main.User:
    properties:
      _id:
        type: string
      avatar:
        type: string
      email:
        type: string
      hashed_password:
        type: string
      name:
        type: string
      salt:
        type: string
    type: object
  main.Workspace:
    properties:
      _id:
        type: string
      avatar:
        type: string
      members:
        items:
          type: string
        type: array
      name:
        type: string
      owned_by:
        type: string
    type: object
info:
  contact: {}
  description: Simple WIP task tracker that can be self-hosted
  title: Rela API Docs
  version: "1.0"
paths:
  /boards:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Board'
            type: array
      summary: Get all boards
      tags:
      - Boards
    post:
      consumes:
      - application/json
      parameters:
      - description: Create board request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.CreateBoard'
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Create new board
      tags:
      - Boards
  /boards/{boardId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete board
      tags:
      - Boards
    get:
      consumes:
      - application/json
      parameters:
      - description: Board ID
        in: path
        name: boardId
        required: true
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Board'
      summary: Get board by id
      tags:
      - Boards
    patch:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Edit board
      tags:
      - Boards
  /tasks:
    get:
      description: Return all tasks that current user owns
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Task'
            type: array
      summary: Get all tasks
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      parameters:
      - description: Create task request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.CreateTask'
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Task'
            type: array
      summary: Create new task
      tags:
      - Tasks
  /tasks/{taskId}:
    delete:
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete existing task
      tags:
      - Tasks
    patch:
      consumes:
      - application/json
      parameters:
      - description: Edit task request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.EditTask'
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Edit existing task
      tags:
      - Tasks
  /users/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create user request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.TokenSwagger'
            type: array
      summary: Create new user
      tags:
      - Users
  /users/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Delete user request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.LoginUser'
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Delete user
      tags:
      - Users
  /users/get_info:
    get:
      description: For this route, you must have bearer token
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.User'
            type: array
      summary: Get user info
      tags:
      - Users
  /users/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login user request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.TokenSwagger'
            type: array
      summary: Login user
      tags:
      - Users
  /users/upload_avatar:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Avatar
        in: formData
        name: data
        required: true
        type: file
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Upload avatar for user
      tags:
      - Users
  /users/workspaces:
    get:
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Get all workspaces for the current user
      tags:
      - Workspaces
  /workspaces/{workspaceId}/:
    delete:
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Delete workspace
      tags:
      - Workspaces
    get:
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Workspace'
      summary: Get workspace by id
      tags:
      - Workspaces
    patch:
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Edit workspace
      tags:
      - Workspaces
  /workspaces/{workspaceId}/assign:
    post:
      consumes:
      - application/json
      parameters:
      - description: Assign Task
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.AssignTask'
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Assign task to someone
      tags:
      - Tasks
  /workspaces/{workspaceId}/boards:
    get:
      consumes:
      - application/json
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Board'
            type: array
      summary: Get all boards
      tags:
      - Boards
    post:
      consumes:
      - application/json
      parameters:
      - description: Create board request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.CreateBoard'
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Create new board
      tags:
      - Boards
  /workspaces/{workspaceId}/boards/{boardId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete board
      tags:
      - Boards
    get:
      consumes:
      - application/json
      parameters:
      - description: Board ID
        in: path
        name: boardId
        required: true
        type: string
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Board'
      summary: Get board by id
      tags:
      - Boards
    patch:
      consumes:
      - application/json
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Edit board
      tags:
      - Boards
  /workspaces/{workspaceId}/info:
    get:
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Get workspace info (basic, members, boards)
      tags:
      - Workspaces
  /workspaces/{workspaceId}/kick:
    delete:
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Kick member
      tags:
      - Workspaces
  /workspaces/{workspaceId}/members:
    get:
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Get all members info
      tags:
      - Workspaces
  /workspaces/{workspaceId}/new_invite:
    get:
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Create invite to the workspace
      tags:
      - Workspaces
  /workspaces/{workspaceId}/promote/{userId}:
    patch:
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Promote member
      tags:
      - Workspaces
  /workspaces/{workspaceId}/tasks:
    get:
      description: Return all tasks that current user owns
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Task'
            type: array
      summary: Get all tasks
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      parameters:
      - description: Create task request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.CreateTask'
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Task'
            type: array
      summary: Create new task
      tags:
      - Tasks
  /workspaces/{workspaceId}/tasks/{taskId}:
    delete:
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete existing task
      tags:
      - Tasks
    patch:
      consumes:
      - application/json
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Edit task request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.EditTask'
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Edit existing task
      tags:
      - Tasks
  /workspaces/{workspaceId}/upload_avatar:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Avatar
        in: formData
        name: data
        required: true
        type: file
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Upload avatar for user
      tags:
      - Users
  /workspaces/add/{joinToken}:
    post:
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Join Token
        in: path
        name: joinToken
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Accept invite
      tags:
      - Workspaces
  /workspaces/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create new workspace
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.CreateBoard'
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Create new workspace
      tags:
      - Workspaces
swagger: "2.0"
