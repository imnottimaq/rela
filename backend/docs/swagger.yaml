definitions:
  main.CreateBoard:
    properties:
      name:
        type: string
    type: object
  main.CreateTask:
    properties:
      board:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  main.CreateUser:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  main.EditTask:
    properties:
      board:
        type: string
      completed_at:
        type: integer
      description:
        type: string
      name:
        type: string
    type: object
  main.LoginUser:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  main.Task:
    properties:
      _id:
        type: string
      board:
        type: string
      created_at:
        type: integer
      created_by:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  main.Token:
    properties:
      token:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/boards:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create board request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.CreateBoard'
      - description: Bearer Token
        in: header
        name: X-Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Create new board
      tags:
      - Boards
  /api/v1/boards/{boardId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: X-Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete board
      tags:
      - Boards
    patch:
      consumes:
      - application/json
      parameters:
      - in: path
        name: name
        type: string
      - description: Bearer Token
        in: header
        name: X-Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Edit board
      tags:
      - Boards
  /api/v1/tasks:
    get:
      description: Return all tasks that current user owns
      parameters:
      - description: Bearer Token
        in: header
        name: X-Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Task'
            type: array
      summary: Get all tasks
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      parameters:
      - description: Create task request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.CreateTask'
      - description: Bearer Token
        in: header
        name: X-Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Task'
            type: array
      summary: Create new task
      tags:
      - Tasks
  /api/v1/tasks/{taskId}:
    delete:
      parameters:
      - description: Bearer Token
        in: header
        name: X-Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Edit existing task
      tags:
      - Tasks
    patch:
      consumes:
      - application/json
      parameters:
      - description: Edit task request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.EditTask'
      - description: Bearer Token
        in: header
        name: X-Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Edit existing task
      tags:
      - Tasks
  /api/v1/users/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create user request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Token'
            type: array
      summary: Create new user
      tags:
      - Users
  /api/v1/users/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Delete user request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.LoginUser'
      - description: Bearer Token
        in: header
        name: X-Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Delete user
      tags:
      - Users
  /api/v1/users/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login user request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Token'
            type: array
      summary: Login user
      tags:
      - Users
  /api/v1/users/refresh:
    get:
      description: For this route, you must have refresh token, that is sent to your
        browser when you log into user account as a http-only cookie
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Token'
            type: array
      summary: Refresh bearer token
      tags:
      - Users
  /api/v1/users/upload_avatar:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Avatar
        in: formData
        name: image
        required: true
        type: string
      - description: Bearer Token
        in: header
        name: X-Authorization
        required: true
        type: string
      responses:
        "200":
          description: OK
      summary: Upload avatar for user
      tags:
      - Users
swagger: "2.0"
