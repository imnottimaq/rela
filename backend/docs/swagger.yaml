basePath: /api/v1
definitions:
  main.AllBoardsResponse:
    properties:
      boards:
        items:
          $ref: '#/definitions/main.Board'
        type: array
    type: object
  main.AllMembersResponse:
    properties:
      members:
        items:
          $ref: '#/definitions/main.Member'
        type: array
    type: object
  main.AllTasksResponse:
    properties:
      tasks:
        items:
          $ref: '#/definitions/main.Task'
        type: array
    type: object
  main.AllWorkspacesResponse:
    properties:
      workspaces:
        items:
          $ref: '#/definitions/main.Workspace'
        type: array
    type: object
  main.AssignTask:
    properties:
      taskId:
        type: string
      userId:
        type: string
    type: object
  main.Board:
    properties:
      _id:
        type: string
      name:
        type: string
      owned_by:
        type: string
    type: object
  main.CreateBoard:
    properties:
      name:
        type: string
    type: object
  main.CreateTask:
    properties:
      board:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  main.CreateUser:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  main.CreateWorkspace:
    properties:
      name:
        type: string
    type: object
  main.EditTask:
    properties:
      board:
        type: string
      completed_at:
        type: integer
      deadline:
        type: integer
      description:
        type: string
      name:
        type: string
    type: object
  main.EditWorkspace:
    properties:
      avatar:
        type: string
      name:
        type: string
    type: object
  main.ErrorSwagger:
    properties:
      error:
        type: string
    type: object
  main.KickUser:
    properties:
      id:
        type: string
    type: object
  main.LoginUser:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  main.Member:
    properties:
      _id:
        type: string
      avatar:
        type: string
      name:
        type: string
    type: object
  main.Task:
    properties:
      _id:
        type: string
      assigned_to:
        type: string
      board:
        type: string
      created_at:
        type: integer
      created_by:
        type: string
      deadline:
        type: integer
      description:
        type: string
      name:
        type: string
    type: object
  main.TokenSwagger:
    properties:
      token:
        type: string
    type: object
  main.User:
    properties:
      _id:
        type: string
      avatar:
        type: string
      email:
        type: string
      name:
        type: string
    type: object
  main.Workspace:
    properties:
      _id:
        type: string
      avatar:
        type: string
      members:
        items:
          type: string
        type: array
      name:
        type: string
      owned_by:
        type: string
    type: object
  main.WorkspaceInfo:
    properties:
      _id:
        type: string
      avatar:
        type: string
      boards:
        items:
          $ref: '#/definitions/main.Board'
        type: array
      memberDetails:
        items:
          $ref: '#/definitions/main.Member'
        type: array
      name:
        type: string
      owned_by:
        type: string
    type: object
info:
  contact: {}
  description: Simple WIP task tracker that can be self-hosted
  title: Rela API Docs
  version: "1.0"
paths:
  /boards:
    get:
      description: Returns all boards owned by the current user, or all boards for
        a given workspace.
      produces:
      - application/json
      responses:
        "200":
          description: A list of boards
          schema:
            $ref: '#/definitions/main.AllBoardsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Get all boards
      tags:
      - Boards
    post:
      consumes:
      - application/json
      description: Creates a new board for the current user or a workspace.
      parameters:
      - description: Board creation data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.CreateBoard'
      produces:
      - application/json
      responses:
        "200":
          description: The created board
          schema:
            $ref: '#/definitions/main.Board'
        "400":
          description: Bad request - no name given
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Create a new board
      tags:
      - Boards
  /boards/{boardId}:
    delete:
      description: Deletes a specific board.
      parameters:
      - description: Board ID
        in: path
        name: boardId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Board deleted successfully
        "403":
          description: Forbidden - you do not own this board
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - board not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Delete a board
      tags:
      - Boards
    get:
      description: Retrieves a specific board by its ID.
      parameters:
      - description: Board ID
        in: path
        name: boardId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The requested board
          schema:
            $ref: '#/definitions/main.Board'
        "400":
          description: Bad request - invalid board ID
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "403":
          description: Forbidden - you do not have access to this board
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - board not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Get a board by ID
      tags:
      - Boards
    patch:
      consumes:
      - application/json
      description: Edits the details of a specific board.
      parameters:
      - description: Board ID
        in: path
        name: boardId
        required: true
        type: string
      - description: Fields to edit in the board
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.CreateBoard'
      produces:
      - application/json
      responses:
        "200":
          description: The updated board
          schema:
            $ref: '#/definitions/main.Board'
        "400":
          description: Bad request - invalid input
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "403":
          description: Forbidden - you do not own this board
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - board not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Edit a board
      tags:
      - Boards
  /tasks:
    get:
      description: Returns all tasks owned by the current user, or all tasks for a
        given workspace.
      produces:
      - application/json
      responses:
        "200":
          description: A list of tasks
          schema:
            $ref: '#/definitions/main.AllTasksResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Get all tasks
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      description: Creates a new task for the current user or a workspace.
      parameters:
      - description: Task creation data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.CreateTask'
      produces:
      - application/json
      responses:
        "200":
          description: The created task
          schema:
            $ref: '#/definitions/main.Task'
        "400":
          description: Bad request - check your input
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Create a new task
      tags:
      - Tasks
  /tasks/{taskId}:
    delete:
      description: Deletes a specific task.
      parameters:
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: string
      responses:
        "200":
          description: Task deleted successfully
        "403":
          description: Forbidden - you do not have access to this task
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - task or workspace not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Delete an existing task
      tags:
      - Tasks
    patch:
      consumes:
      - application/json
      description: Edits the details of a specific task.
      parameters:
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: string
      - description: Fields to edit in the task
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.EditTask'
      responses:
        "200":
          description: Task updated successfully
        "400":
          description: Bad request - invalid input or deadline in the past
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "403":
          description: Forbidden - you do not have access to this task
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - task or workspace not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Edit an existing task
      tags:
      - Tasks
  /users/create:
    post:
      consumes:
      - application/json
      description: Creates a new user and returns an access token.
      parameters:
      - description: User creation data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: Access token
          schema:
            $ref: '#/definitions/main.TokenSwagger'
        "400":
          description: Bad request - check your input
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "409":
          description: User with that email already exists
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      summary: Create new user
      tags:
      - Users
  /users/delete:
    delete:
      consumes:
      - application/json
      description: Deletes the currently authenticated user.
      parameters:
      - description: User password for confirmation
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.LoginUser'
      responses:
        "200":
          description: User deleted successfully
        "400":
          description: Bad request - password mismatch
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Delete user
      tags:
      - Users
  /users/get_info:
    get:
      description: Retrieves details for the currently authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: User details
          schema:
            $ref: '#/definitions/main.User'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Get user info
      tags:
      - Users
  /users/login:
    post:
      consumes:
      - application/json
      description: Logs in a user and returns an access token.
      parameters:
      - description: User login data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: Access token
          schema:
            $ref: '#/definitions/main.TokenSwagger'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      summary: Login user
      tags:
      - Users
  /users/refresh:
    get:
      description: Generates a new access token using the refresh token stored in
        an http-only cookie.
      produces:
      - application/json
      responses:
        "200":
          description: New access token
          schema:
            $ref: '#/definitions/main.TokenSwagger'
        "400":
          description: Invalid token
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "403":
          description: Authorization required
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      summary: Refresh bearer token
      tags:
      - Users
  /users/upload_avatar:
    post:
      consumes:
      - multipart/form-data
      description: Uploads an avatar image for the current user or a specified workspace.
      parameters:
      - description: Avatar image file (jpg or png)
        in: formData
        name: img
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Avatar uploaded successfully
        "400":
          description: Bad request - no file or wrong format
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Workspace not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Upload avatar for user or workspace
      tags:
      - Users
  /users/workspaces:
    get:
      description: Returns a list of all workspaces the current user is a member of.
      produces:
      - application/json
      responses:
        "200":
          description: A list of workspaces
          schema:
            $ref: '#/definitions/main.AllWorkspacesResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Get all workspaces for the current user
      tags:
      - Workspaces
  /workspaces/{workspaceId}:
    delete:
      description: Deletes a specific workspace.
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Workspace deleted successfully
        "403":
          description: Forbidden - you are not the owner of this workspace
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - workspace not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Delete a workspace
      tags:
      - Workspaces
    get:
      description: Retrieves a specific workspace by its ID.
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The requested workspace
          schema:
            $ref: '#/definitions/main.Workspace'
        "400":
          description: Bad request - invalid workspace ID
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "403":
          description: Forbidden - you are not a member of this workspace
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - workspace not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Get a workspace by ID
      tags:
      - Workspaces
    patch:
      consumes:
      - application/json
      description: Edits the details of a specific workspace.
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Fields to edit in the workspace
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.EditWorkspace'
      produces:
      - application/json
      responses:
        "200":
          description: The updated workspace
          schema:
            $ref: '#/definitions/main.Workspace'
        "400":
          description: Bad request - invalid input
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "403":
          description: Forbidden - you are not the owner of this workspace
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - workspace not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Edit a workspace
      tags:
      - Workspaces
  /workspaces/{workspaceId}/assign:
    post:
      consumes:
      - application/json
      description: Assigns a task within a workspace to a specific user.
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      - description: Task and User IDs
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.AssignTask'
      produces:
      - application/json
      responses:
        "200":
          description: The updated task
          schema:
            $ref: '#/definitions/main.Task'
        "403":
          description: Forbidden - you are not the owner or the user to be assigned
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - workspace or task not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Assign a task to a user
      tags:
      - Tasks
  /workspaces/{workspaceId}/boards:
    get:
      description: Returns all boards owned by the current user, or all boards for
        a given workspace.
      parameters:
      - description: Workspace ID (optional)
        in: path
        name: workspaceId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A list of boards
          schema:
            $ref: '#/definitions/main.AllBoardsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Get all boards
      tags:
      - Boards
    post:
      consumes:
      - application/json
      description: Creates a new board for the current user or a workspace.
      parameters:
      - description: Workspace ID (optional)
        in: path
        name: workspaceId
        type: string
      - description: Board creation data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.CreateBoard'
      produces:
      - application/json
      responses:
        "200":
          description: The created board
          schema:
            $ref: '#/definitions/main.Board'
        "400":
          description: Bad request - no name given
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Create a new board
      tags:
      - Boards
  /workspaces/{workspaceId}/boards/{boardId}:
    delete:
      description: Deletes a specific board.
      parameters:
      - description: Board ID
        in: path
        name: boardId
        required: true
        type: string
      - description: Workspace ID (optional)
        in: path
        name: workspaceId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Board deleted successfully
        "403":
          description: Forbidden - you do not own this board
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - board not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Delete a board
      tags:
      - Boards
    get:
      description: Retrieves a specific board by its ID.
      parameters:
      - description: Board ID
        in: path
        name: boardId
        required: true
        type: string
      - description: Workspace ID (optional, for authorization context)
        in: path
        name: workspaceId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The requested board
          schema:
            $ref: '#/definitions/main.Board'
        "400":
          description: Bad request - invalid board ID
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "403":
          description: Forbidden - you do not have access to this board
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - board not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Get a board by ID
      tags:
      - Boards
    patch:
      consumes:
      - application/json
      description: Edits the details of a specific board.
      parameters:
      - description: Board ID
        in: path
        name: boardId
        required: true
        type: string
      - description: Workspace ID (optional)
        in: path
        name: workspaceId
        type: string
      - description: Fields to edit in the board
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.CreateBoard'
      produces:
      - application/json
      responses:
        "200":
          description: The updated board
          schema:
            $ref: '#/definitions/main.Board'
        "400":
          description: Bad request - invalid input
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "403":
          description: Forbidden - you do not own this board
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - board not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Edit a board
      tags:
      - Boards
  /workspaces/{workspaceId}/info:
    get:
      description: Retrieves detailed information about a workspace, including members
        and boards.
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Detailed workspace information
          schema:
            $ref: '#/definitions/main.WorkspaceInfo'
        "400":
          description: Bad request - invalid workspace ID
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "403":
          description: Forbidden - you are not a member of this workspace
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - workspace not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Get workspace info
      tags:
      - Workspaces
  /workspaces/{workspaceId}/kick:
    delete:
      consumes:
      - application/json
      description: Removes a member from a specific workspace.
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      - description: User ID to kick
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.KickUser'
      responses:
        "200":
          description: Member kicked successfully
        "400":
          description: Bad request - workspace ID not specified
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "403":
          description: Forbidden - you are not the owner of this workspace
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - workspace or user not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Kick a member from a workspace
      tags:
      - Workspaces
  /workspaces/{workspaceId}/members:
    get:
      description: Returns a list of all members in a specific workspace.
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A list of members
          schema:
            $ref: '#/definitions/main.AllMembersResponse'
        "400":
          description: Bad request - invalid workspace ID
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "403":
          description: Forbidden - you are not a member of this workspace
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - workspace not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Get all members of a workspace
      tags:
      - Workspaces
  /workspaces/{workspaceId}/new_invite:
    get:
      description: Generates a new invite token for a workspace.
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: The invite token
          schema:
            $ref: '#/definitions/main.TokenSwagger'
        "400":
          description: Bad request - workspace ID not specified
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "403":
          description: Forbidden - you are not the owner of this workspace
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - workspace not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Create a workspace invite
      tags:
      - Workspaces
  /workspaces/{workspaceId}/promote/{userId}:
    patch:
      description: Promotes a member of a workspace to be the new owner.
      parameters:
      - description: Workspace ID
        in: path
        name: workspaceId
        required: true
        type: string
      - description: User ID to promote
        in: path
        name: userId
        required: true
        type: string
      responses:
        "200":
          description: Member promoted successfully
        "400":
          description: Bad request - user is not part of this workspace
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "403":
          description: Forbidden - you are not the owner of this workspace
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - workspace or user not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Promote a member to owner
      tags:
      - Workspaces
  /workspaces/{workspaceId}/tasks:
    get:
      description: Returns all tasks owned by the current user, or all tasks for a
        given workspace.
      parameters:
      - description: Workspace ID (optional)
        in: path
        name: workspaceId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: A list of tasks
          schema:
            $ref: '#/definitions/main.AllTasksResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Get all tasks
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      description: Creates a new task for the current user or a workspace.
      parameters:
      - description: Workspace ID (optional)
        in: path
        name: workspaceId
        type: string
      - description: Task creation data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.CreateTask'
      produces:
      - application/json
      responses:
        "200":
          description: The created task
          schema:
            $ref: '#/definitions/main.Task'
        "400":
          description: Bad request - check your input
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Create a new task
      tags:
      - Tasks
  /workspaces/{workspaceId}/tasks/{taskId}:
    delete:
      description: Deletes a specific task.
      parameters:
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: string
      - description: Workspace ID (optional)
        in: path
        name: workspaceId
        type: string
      responses:
        "200":
          description: Task deleted successfully
        "403":
          description: Forbidden - you do not have access to this task
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - task or workspace not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Delete an existing task
      tags:
      - Tasks
    patch:
      consumes:
      - application/json
      description: Edits the details of a specific task.
      parameters:
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: string
      - description: Workspace ID (optional)
        in: path
        name: workspaceId
        type: string
      - description: Fields to edit in the task
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.EditTask'
      responses:
        "200":
          description: Task updated successfully
        "400":
          description: Bad request - invalid input or deadline in the past
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "403":
          description: Forbidden - you do not have access to this task
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - task or workspace not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Edit an existing task
      tags:
      - Tasks
  /workspaces/{workspaceId}/upload_avatar:
    post:
      consumes:
      - multipart/form-data
      description: Uploads an avatar image for the current user or a specified workspace.
      parameters:
      - description: Avatar image file (jpg or png)
        in: formData
        name: img
        required: true
        type: file
      - description: Workspace ID (if uploading for a workspace)
        in: path
        name: workspaceId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Avatar uploaded successfully
        "400":
          description: Bad request - no file or wrong format
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Workspace not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Upload avatar for user or workspace
      tags:
      - Users
  /workspaces/add/{joinToken}:
    post:
      description: Adds the current user to a workspace using an invite token.
      parameters:
      - description: Join Token
        in: path
        name: joinToken
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully joined the workspace
        "400":
          description: Bad request - invalid token
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "404":
          description: Not Found - workspace not found
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Join a workspace
      tags:
      - Workspaces
  /workspaces/create:
    post:
      consumes:
      - application/json
      description: Creates a new workspace for the current user.
      parameters:
      - description: Workspace creation data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/main.CreateWorkspace'
      produces:
      - application/json
      responses:
        "200":
          description: The created workspace
          schema:
            $ref: '#/definitions/main.Workspace'
        "400":
          description: Bad request - no name specified
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorSwagger'
      security:
      - BearerAuth: []
      summary: Create a new workspace
      tags:
      - Workspaces
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
